### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type FixPart {
  createdAt: DateTime!
  estimateFixTime: String
  houseId: Int
  id: ID
  roomTypeFixParts: [RoomTypeFixPart!]!
  updatedAt: DateTime!
}

type FixPartEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: FixPart
}

type House {
  address: String
  createdAt: DateTime!
  id: ID
  name: String
  updatedAt: DateTime!
  userId: Int
}

type HouseEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: House
}

type Movie {
  createdAt: DateTime!
  estimatedTime: String
  fixPartId: Int
  id: ID
  learningTime: String
  movieSkills: [MovieSkill!]!
  movieTools: [MovieTool!]!
  updatedAt: DateTime!
}

type MovieEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Movie
}

type MovieSkill {
  createdAt: DateTime!
  id: ID
  movieId: Int!
  skillId: Int!
  updatedAt: DateTime!
}

type MovieSkillEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: MovieSkill
}

type MovieTool {
  createdAt: DateTime!
  id: ID
  movieId: Int!
  toolId: Int!
  updatedAt: DateTime!
}

type MovieToolEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: MovieTool
}

type Mutation {
  createFixPart(estimateFixTime: String, houseId: Int): FixPart
  createHouse(address: String, name: String, userId: Int): House
  createMovie(estimatedTime: String, fixPartId: Int, learningTime: String): Movie
  createMovieSkill(movieId: Int, skillId: Int): MovieSkill
  createMovieTool(movieId: Int, toolId: Int): MovieTool
  createPartner(companyAddress: String, companyName: String, companyTel: String, contactPerson: String, houseId: Int): Partner
  createRoomType(name: String): RoomType
  createRoomTypeFixPart(fixPartId: Int, roomTypeId: Int): RoomTypeFixPart
  createSkill(name: String): Skill
  createTool(name: String): Tool
  createUser(email: String, iconUrl: String, role: String, uid: String, username: String): User
  createUserSkill(skillId: Int, userId: Int): UserSkill
  deleteFixPart(id: String): FixPart
  deleteHouse(id: String): House
  deleteMovie(id: String): Movie
  deleteMovieSkill(id: String): MovieSkill
  deleteMovieTool(id: String): MovieTool
  deletePartner(id: String): Partner
  deleteRoomType(id: String): RoomType
  deleteRoomTypeFixPart(id: String): RoomTypeFixPart
  deleteSkill(id: String): Skill
  deleteTool(id: String): Tool
  deleteUser(id: String): User
  deleteUserSkill(id: String): UserSkill
  updateFixPart(id: String): FixPart
  updateHouse(id: String): House
  updateMovie(id: String): Movie
  updateMovieSkill(id: String): MovieSkill
  updateMovieTool(id: String): MovieTool
  updatePartner(id: String): Partner
  updateRoomType(id: String): RoomType
  updateRoomTypeFixPart(id: String): RoomTypeFixPart
  updateSkill(id: String): Skill
  updateTool(id: String): Tool
  updateUser(id: String): User
  updateUserSkill(id: String): UserSkill
}

"""An object with a global ID"""
interface Node {
  """The global ID of the object."""
  id: ID
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Partner {
  acceptableAreas: [String!]!
  companyAddress: String
  companyName: String
  companyTel: String
  contactPerson: String
  createdAt: DateTime!
  houseId: Int
  id: ID
  updatedAt: DateTime!
}

type PartnerEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Partner
}

type Query {
  fixPartConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryFixPartConnection_Connection
  getFixPart(id: String!): FixPart
  getHouse(id: String!): House
  getMovie(id: String!): Movie
  getMovieSkill(id: String!): MovieSkill
  getMovieTool(id: String!): MovieTool
  getPartner(id: String!): Partner
  getRoomType(id: String!): RoomType
  getRoomTypeFixPart(id: String!): RoomTypeFixPart
  getSkill(id: String!): Skill
  getTool(id: String!): Tool
  getUser(id: String!): User
  getUserSkill(id: String!): UserSkill
  houseConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryHouseConnection_Connection
  me: User
  movieConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryMovieConnection_Connection
  movieSkillConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryMovieSkillConnection_Connection
  movieToolConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryMovieToolConnection_Connection

  """Fetches an object given its global ID"""
  node(
    """The global ID of an object"""
    id: ID!
  ): Node

  """Fetches objects given their global IDs"""
  nodes(
    """The global IDs of objects"""
    ids: [ID!]!
  ): [Node]!
  partnerConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryPartnerConnection_Connection
  postTweet(id: String, text: String): Boolean
  roomTypeConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryRoomTypeConnection_Connection
  roomTypeFixPartConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryRoomTypeFixPartConnection_Connection
  skillConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QuerySkillConnection_Connection
  toolConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryToolConnection_Connection
  userConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryUserConnection_Connection
  userSkillConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryUserSkillConnection_Connection
}

type QueryFixPartConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FixPartEdge]

  """Flattened list of FixPart type"""
  nodes: [FixPart]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryHouseConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [HouseEdge]

  """Flattened list of House type"""
  nodes: [House]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryMovieConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [MovieEdge]

  """Flattened list of Movie type"""
  nodes: [Movie]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryMovieSkillConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [MovieSkillEdge]

  """Flattened list of MovieSkill type"""
  nodes: [MovieSkill]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryMovieToolConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [MovieToolEdge]

  """Flattened list of MovieTool type"""
  nodes: [MovieTool]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryPartnerConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [PartnerEdge]

  """Flattened list of Partner type"""
  nodes: [Partner]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryRoomTypeConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [RoomTypeEdge]

  """Flattened list of RoomType type"""
  nodes: [RoomType]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryRoomTypeFixPartConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [RoomTypeFixPartEdge]

  """Flattened list of RoomTypeFixPart type"""
  nodes: [RoomTypeFixPart]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QuerySkillConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [SkillEdge]

  """Flattened list of Skill type"""
  nodes: [Skill]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryToolConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ToolEdge]

  """Flattened list of Tool type"""
  nodes: [Tool]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryUserConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """Flattened list of User type"""
  nodes: [User]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryUserSkillConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserSkillEdge]

  """Flattened list of UserSkill type"""
  nodes: [UserSkill]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

enum Role {
  ADMIN
  MASTER
  USER
}

type RoomType {
  createdAt: DateTime!
  id: ID
  name: String
  roomTypeFixParts: [RoomTypeFixPart!]!
  updatedAt: DateTime!
}

type RoomTypeEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: RoomType
}

type RoomTypeFixPart {
  createdAt: DateTime!
  fixPartId: Int!
  id: ID
  roomTypeId: Int!
  updatedAt: DateTime!
}

type RoomTypeFixPartEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: RoomTypeFixPart
}

type Skill {
  createdAt: DateTime!
  id: ID
  movieSkills: [MovieSkill!]!
  name: String
  updatedAt: DateTime!
  userSkills: [UserSkill!]!
}

type SkillEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Skill
}

type Tool {
  createdAt: DateTime!
  id: ID
  movieTools: [MovieTool!]!
  name: String
  updatedAt: DateTime!
}

type ToolEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Tool
}

type User {
  createdAt: DateTime!
  email: String!
  iconUrl: String
  id: ID
  role: Role
  uid: String!
  updatedAt: DateTime!
  userSkills: [UserSkill!]!
  username: String
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User
}

type UserSkill {
  createdAt: DateTime!
  id: ID
  skillId: Int!
  updatedAt: DateTime!
  userId: Int!
}

type UserSkillEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserSkill
}