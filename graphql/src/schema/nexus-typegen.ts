/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core, connectionPluginCore } from "nexus"
import type { RelayGlobalIdNexusFieldConfig } from "@jcm/nexus-plugin-relay-global-id"
import type { QueryComplexity } from "nexus/dist/plugins/queryComplexityPlugin"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName> & { totalCount?: connectionPluginCore.ConnectionFieldResolver<TypeName, FieldName, "totalCount"> }
    ): void
    relayGlobalId<FieldName extends string>(
            fieldName: FieldName, 
            config: RelayGlobalIdNexusFieldConfig<TypeName, FieldName>
          ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  Role: "ADMIN" | "MASTER" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: Date
}

export interface NexusGenObjects {
  FixPart: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    estimateFixTime?: string | null; // String
    houseId?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FixPartEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['FixPart'] | null; // FixPart
  }
  House: { // root type
    address?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId?: number | null; // Int
  }
  HouseEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['House'] | null; // House
  }
  Movie: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    estimatedTime?: string | null; // String
    fixPartId?: number | null; // Int
    learningTime?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Movie'] | null; // Movie
  }
  MovieSkill: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    movieId: number; // Int!
    skillId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieSkillEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
  }
  MovieTool: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    movieId: number; // Int!
    toolId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieToolEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['MovieTool'] | null; // MovieTool
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Partner: { // root type
    acceptableAreas: string[]; // [String!]!
    companyAddress?: string | null; // String
    companyName?: string | null; // String
    companyTel?: string | null; // String
    contactPerson?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    houseId?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PartnerEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Partner'] | null; // Partner
  }
  Query: {};
  QueryFixPartConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['FixPartEdge'] | null> | null; // [FixPartEdge]
    nodes?: Array<NexusGenRootTypes['FixPart'] | null> | null; // [FixPart]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryHouseConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['HouseEdge'] | null> | null; // [HouseEdge]
    nodes?: Array<NexusGenRootTypes['House'] | null> | null; // [House]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryMovieConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['MovieEdge'] | null> | null; // [MovieEdge]
    nodes?: Array<NexusGenRootTypes['Movie'] | null> | null; // [Movie]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryMovieSkillConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['MovieSkillEdge'] | null> | null; // [MovieSkillEdge]
    nodes?: Array<NexusGenRootTypes['MovieSkill'] | null> | null; // [MovieSkill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryMovieToolConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['MovieToolEdge'] | null> | null; // [MovieToolEdge]
    nodes?: Array<NexusGenRootTypes['MovieTool'] | null> | null; // [MovieTool]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryPartnerConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['PartnerEdge'] | null> | null; // [PartnerEdge]
    nodes?: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryRoomTypeConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['RoomTypeEdge'] | null> | null; // [RoomTypeEdge]
    nodes?: Array<NexusGenRootTypes['RoomType'] | null> | null; // [RoomType]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryRoomTypeFixPartConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['RoomTypeFixPartEdge'] | null> | null; // [RoomTypeFixPartEdge]
    nodes?: Array<NexusGenRootTypes['RoomTypeFixPart'] | null> | null; // [RoomTypeFixPart]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QuerySkillConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['SkillEdge'] | null> | null; // [SkillEdge]
    nodes?: Array<NexusGenRootTypes['Skill'] | null> | null; // [Skill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryToolConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['ToolEdge'] | null> | null; // [ToolEdge]
    nodes?: Array<NexusGenRootTypes['Tool'] | null> | null; // [Tool]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryUserConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    nodes?: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryUserSkillConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['UserSkillEdge'] | null> | null; // [UserSkillEdge]
    nodes?: Array<NexusGenRootTypes['UserSkill'] | null> | null; // [UserSkill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  RoomType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomTypeEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['RoomType'] | null; // RoomType
  }
  RoomTypeFixPart: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fixPartId: number; // Int!
    roomTypeId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomTypeFixPartEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
  }
  Skill: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  SkillEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Skill'] | null; // Skill
  }
  Tool: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  ToolEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Tool'] | null; // Tool
  }
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    iconUrl?: string | null; // String
    role?: NexusGenEnums['Role'] | null; // Role
    uid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username?: string | null; // String
  }
  UserEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['User'] | null; // User
  }
  UserSkill: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    skillId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
  }
  UserSkillEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['UserSkill'] | null; // UserSkill
  }
}

export interface NexusGenInterfaces {
  Node: any;
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  FixPart: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    estimateFixTime: string | null; // String
    houseId: number | null; // Int
    id: string | null; // ID
    roomTypeFixParts: NexusGenRootTypes['RoomTypeFixPart'][]; // [RoomTypeFixPart!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FixPartEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['FixPart'] | null; // FixPart
  }
  House: { // field return type
    address: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number | null; // Int
  }
  HouseEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['House'] | null; // House
  }
  Movie: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    estimatedTime: string | null; // String
    fixPartId: number | null; // Int
    id: string | null; // ID
    learningTime: string | null; // String
    movieSkills: NexusGenRootTypes['MovieSkill'][]; // [MovieSkill!]!
    movieTools: NexusGenRootTypes['MovieTool'][]; // [MovieTool!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Movie'] | null; // Movie
  }
  MovieSkill: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    movieId: number; // Int!
    skillId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieSkillEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
  }
  MovieTool: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    movieId: number; // Int!
    toolId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MovieToolEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['MovieTool'] | null; // MovieTool
  }
  Mutation: { // field return type
    createFixPart: NexusGenRootTypes['FixPart'] | null; // FixPart
    createHouse: NexusGenRootTypes['House'] | null; // House
    createMovie: NexusGenRootTypes['Movie'] | null; // Movie
    createMovieSkill: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
    createMovieTool: NexusGenRootTypes['MovieTool'] | null; // MovieTool
    createPartner: NexusGenRootTypes['Partner'] | null; // Partner
    createRoomType: NexusGenRootTypes['RoomType'] | null; // RoomType
    createRoomTypeFixPart: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
    createSkill: NexusGenRootTypes['Skill'] | null; // Skill
    createTool: NexusGenRootTypes['Tool'] | null; // Tool
    createUser: NexusGenRootTypes['User'] | null; // User
    createUserSkill: NexusGenRootTypes['UserSkill'] | null; // UserSkill
    deleteFixPart: NexusGenRootTypes['FixPart'] | null; // FixPart
    deleteHouse: NexusGenRootTypes['House'] | null; // House
    deleteMovie: NexusGenRootTypes['Movie'] | null; // Movie
    deleteMovieSkill: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
    deleteMovieTool: NexusGenRootTypes['MovieTool'] | null; // MovieTool
    deletePartner: NexusGenRootTypes['Partner'] | null; // Partner
    deleteRoomType: NexusGenRootTypes['RoomType'] | null; // RoomType
    deleteRoomTypeFixPart: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
    deleteSkill: NexusGenRootTypes['Skill'] | null; // Skill
    deleteTool: NexusGenRootTypes['Tool'] | null; // Tool
    deleteUser: NexusGenRootTypes['User'] | null; // User
    deleteUserSkill: NexusGenRootTypes['UserSkill'] | null; // UserSkill
    updateFixPart: NexusGenRootTypes['FixPart'] | null; // FixPart
    updateHouse: NexusGenRootTypes['House'] | null; // House
    updateMovie: NexusGenRootTypes['Movie'] | null; // Movie
    updateMovieSkill: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
    updateMovieTool: NexusGenRootTypes['MovieTool'] | null; // MovieTool
    updatePartner: NexusGenRootTypes['Partner'] | null; // Partner
    updateRoomType: NexusGenRootTypes['RoomType'] | null; // RoomType
    updateRoomTypeFixPart: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
    updateSkill: NexusGenRootTypes['Skill'] | null; // Skill
    updateTool: NexusGenRootTypes['Tool'] | null; // Tool
    updateUser: NexusGenRootTypes['User'] | null; // User
    updateUserSkill: NexusGenRootTypes['UserSkill'] | null; // UserSkill
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Partner: { // field return type
    acceptableAreas: string[]; // [String!]!
    companyAddress: string | null; // String
    companyName: string | null; // String
    companyTel: string | null; // String
    contactPerson: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    houseId: number | null; // Int
    id: string | null; // ID
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PartnerEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Partner'] | null; // Partner
  }
  Query: { // field return type
    fixPartConnection: NexusGenRootTypes['QueryFixPartConnection_Connection'] | null; // QueryFixPartConnection_Connection
    getFixPart: NexusGenRootTypes['FixPart'] | null; // FixPart
    getHouse: NexusGenRootTypes['House'] | null; // House
    getMovie: NexusGenRootTypes['Movie'] | null; // Movie
    getMovieSkill: NexusGenRootTypes['MovieSkill'] | null; // MovieSkill
    getMovieTool: NexusGenRootTypes['MovieTool'] | null; // MovieTool
    getPartner: NexusGenRootTypes['Partner'] | null; // Partner
    getRoomType: NexusGenRootTypes['RoomType'] | null; // RoomType
    getRoomTypeFixPart: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
    getSkill: NexusGenRootTypes['Skill'] | null; // Skill
    getTool: NexusGenRootTypes['Tool'] | null; // Tool
    getUser: NexusGenRootTypes['User'] | null; // User
    getUserSkill: NexusGenRootTypes['UserSkill'] | null; // UserSkill
    houseConnection: NexusGenRootTypes['QueryHouseConnection_Connection'] | null; // QueryHouseConnection_Connection
    me: NexusGenRootTypes['User'] | null; // User
    movieConnection: NexusGenRootTypes['QueryMovieConnection_Connection'] | null; // QueryMovieConnection_Connection
    movieSkillConnection: NexusGenRootTypes['QueryMovieSkillConnection_Connection'] | null; // QueryMovieSkillConnection_Connection
    movieToolConnection: NexusGenRootTypes['QueryMovieToolConnection_Connection'] | null; // QueryMovieToolConnection_Connection
    node: NexusGenRootTypes['Node'] | null; // Node
    nodes: Array<NexusGenRootTypes['Node'] | null>; // [Node]!
    partnerConnection: NexusGenRootTypes['QueryPartnerConnection_Connection'] | null; // QueryPartnerConnection_Connection
    postTweet: boolean | null; // Boolean
    roomTypeConnection: NexusGenRootTypes['QueryRoomTypeConnection_Connection'] | null; // QueryRoomTypeConnection_Connection
    roomTypeFixPartConnection: NexusGenRootTypes['QueryRoomTypeFixPartConnection_Connection'] | null; // QueryRoomTypeFixPartConnection_Connection
    skillConnection: NexusGenRootTypes['QuerySkillConnection_Connection'] | null; // QuerySkillConnection_Connection
    toolConnection: NexusGenRootTypes['QueryToolConnection_Connection'] | null; // QueryToolConnection_Connection
    userConnection: NexusGenRootTypes['QueryUserConnection_Connection'] | null; // QueryUserConnection_Connection
    userSkillConnection: NexusGenRootTypes['QueryUserSkillConnection_Connection'] | null; // QueryUserSkillConnection_Connection
  }
  QueryFixPartConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['FixPartEdge'] | null> | null; // [FixPartEdge]
    nodes: Array<NexusGenRootTypes['FixPart'] | null> | null; // [FixPart]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryHouseConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['HouseEdge'] | null> | null; // [HouseEdge]
    nodes: Array<NexusGenRootTypes['House'] | null> | null; // [House]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryMovieConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['MovieEdge'] | null> | null; // [MovieEdge]
    nodes: Array<NexusGenRootTypes['Movie'] | null> | null; // [Movie]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryMovieSkillConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['MovieSkillEdge'] | null> | null; // [MovieSkillEdge]
    nodes: Array<NexusGenRootTypes['MovieSkill'] | null> | null; // [MovieSkill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryMovieToolConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['MovieToolEdge'] | null> | null; // [MovieToolEdge]
    nodes: Array<NexusGenRootTypes['MovieTool'] | null> | null; // [MovieTool]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryPartnerConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['PartnerEdge'] | null> | null; // [PartnerEdge]
    nodes: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryRoomTypeConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['RoomTypeEdge'] | null> | null; // [RoomTypeEdge]
    nodes: Array<NexusGenRootTypes['RoomType'] | null> | null; // [RoomType]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryRoomTypeFixPartConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['RoomTypeFixPartEdge'] | null> | null; // [RoomTypeFixPartEdge]
    nodes: Array<NexusGenRootTypes['RoomTypeFixPart'] | null> | null; // [RoomTypeFixPart]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QuerySkillConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['SkillEdge'] | null> | null; // [SkillEdge]
    nodes: Array<NexusGenRootTypes['Skill'] | null> | null; // [Skill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryToolConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['ToolEdge'] | null> | null; // [ToolEdge]
    nodes: Array<NexusGenRootTypes['Tool'] | null> | null; // [Tool]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryUserConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    nodes: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryUserSkillConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['UserSkillEdge'] | null> | null; // [UserSkillEdge]
    nodes: Array<NexusGenRootTypes['UserSkill'] | null> | null; // [UserSkill]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  RoomType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    name: string | null; // String
    roomTypeFixParts: NexusGenRootTypes['RoomTypeFixPart'][]; // [RoomTypeFixPart!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomTypeEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['RoomType'] | null; // RoomType
  }
  RoomTypeFixPart: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fixPartId: number; // Int!
    id: string | null; // ID
    roomTypeId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomTypeFixPartEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['RoomTypeFixPart'] | null; // RoomTypeFixPart
  }
  Skill: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    movieSkills: NexusGenRootTypes['MovieSkill'][]; // [MovieSkill!]!
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userSkills: NexusGenRootTypes['UserSkill'][]; // [UserSkill!]!
  }
  SkillEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Skill'] | null; // Skill
  }
  Tool: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    movieTools: NexusGenRootTypes['MovieTool'][]; // [MovieTool!]!
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  ToolEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Tool'] | null; // Tool
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    iconUrl: string | null; // String
    id: string | null; // ID
    role: NexusGenEnums['Role'] | null; // Role
    uid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userSkills: NexusGenRootTypes['UserSkill'][]; // [UserSkill!]!
    username: string | null; // String
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User'] | null; // User
  }
  UserSkill: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    skillId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
  }
  UserSkillEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['UserSkill'] | null; // UserSkill
  }
  Node: { // field return type
    id: string | null; // ID
  }
}

export interface NexusGenFieldTypeNames {
  FixPart: { // field return type name
    createdAt: 'DateTime'
    estimateFixTime: 'String'
    houseId: 'Int'
    id: 'ID'
    roomTypeFixParts: 'RoomTypeFixPart'
    updatedAt: 'DateTime'
  }
  FixPartEdge: { // field return type name
    cursor: 'String'
    node: 'FixPart'
  }
  House: { // field return type name
    address: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    name: 'String'
    updatedAt: 'DateTime'
    userId: 'Int'
  }
  HouseEdge: { // field return type name
    cursor: 'String'
    node: 'House'
  }
  Movie: { // field return type name
    createdAt: 'DateTime'
    estimatedTime: 'String'
    fixPartId: 'Int'
    id: 'ID'
    learningTime: 'String'
    movieSkills: 'MovieSkill'
    movieTools: 'MovieTool'
    updatedAt: 'DateTime'
  }
  MovieEdge: { // field return type name
    cursor: 'String'
    node: 'Movie'
  }
  MovieSkill: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    movieId: 'Int'
    skillId: 'Int'
    updatedAt: 'DateTime'
  }
  MovieSkillEdge: { // field return type name
    cursor: 'String'
    node: 'MovieSkill'
  }
  MovieTool: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    movieId: 'Int'
    toolId: 'Int'
    updatedAt: 'DateTime'
  }
  MovieToolEdge: { // field return type name
    cursor: 'String'
    node: 'MovieTool'
  }
  Mutation: { // field return type name
    createFixPart: 'FixPart'
    createHouse: 'House'
    createMovie: 'Movie'
    createMovieSkill: 'MovieSkill'
    createMovieTool: 'MovieTool'
    createPartner: 'Partner'
    createRoomType: 'RoomType'
    createRoomTypeFixPart: 'RoomTypeFixPart'
    createSkill: 'Skill'
    createTool: 'Tool'
    createUser: 'User'
    createUserSkill: 'UserSkill'
    deleteFixPart: 'FixPart'
    deleteHouse: 'House'
    deleteMovie: 'Movie'
    deleteMovieSkill: 'MovieSkill'
    deleteMovieTool: 'MovieTool'
    deletePartner: 'Partner'
    deleteRoomType: 'RoomType'
    deleteRoomTypeFixPart: 'RoomTypeFixPart'
    deleteSkill: 'Skill'
    deleteTool: 'Tool'
    deleteUser: 'User'
    deleteUserSkill: 'UserSkill'
    updateFixPart: 'FixPart'
    updateHouse: 'House'
    updateMovie: 'Movie'
    updateMovieSkill: 'MovieSkill'
    updateMovieTool: 'MovieTool'
    updatePartner: 'Partner'
    updateRoomType: 'RoomType'
    updateRoomTypeFixPart: 'RoomTypeFixPart'
    updateSkill: 'Skill'
    updateTool: 'Tool'
    updateUser: 'User'
    updateUserSkill: 'UserSkill'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Partner: { // field return type name
    acceptableAreas: 'String'
    companyAddress: 'String'
    companyName: 'String'
    companyTel: 'String'
    contactPerson: 'String'
    createdAt: 'DateTime'
    houseId: 'Int'
    id: 'ID'
    updatedAt: 'DateTime'
  }
  PartnerEdge: { // field return type name
    cursor: 'String'
    node: 'Partner'
  }
  Query: { // field return type name
    fixPartConnection: 'QueryFixPartConnection_Connection'
    getFixPart: 'FixPart'
    getHouse: 'House'
    getMovie: 'Movie'
    getMovieSkill: 'MovieSkill'
    getMovieTool: 'MovieTool'
    getPartner: 'Partner'
    getRoomType: 'RoomType'
    getRoomTypeFixPart: 'RoomTypeFixPart'
    getSkill: 'Skill'
    getTool: 'Tool'
    getUser: 'User'
    getUserSkill: 'UserSkill'
    houseConnection: 'QueryHouseConnection_Connection'
    me: 'User'
    movieConnection: 'QueryMovieConnection_Connection'
    movieSkillConnection: 'QueryMovieSkillConnection_Connection'
    movieToolConnection: 'QueryMovieToolConnection_Connection'
    node: 'Node'
    nodes: 'Node'
    partnerConnection: 'QueryPartnerConnection_Connection'
    postTweet: 'Boolean'
    roomTypeConnection: 'QueryRoomTypeConnection_Connection'
    roomTypeFixPartConnection: 'QueryRoomTypeFixPartConnection_Connection'
    skillConnection: 'QuerySkillConnection_Connection'
    toolConnection: 'QueryToolConnection_Connection'
    userConnection: 'QueryUserConnection_Connection'
    userSkillConnection: 'QueryUserSkillConnection_Connection'
  }
  QueryFixPartConnection_Connection: { // field return type name
    edges: 'FixPartEdge'
    nodes: 'FixPart'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryHouseConnection_Connection: { // field return type name
    edges: 'HouseEdge'
    nodes: 'House'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryMovieConnection_Connection: { // field return type name
    edges: 'MovieEdge'
    nodes: 'Movie'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryMovieSkillConnection_Connection: { // field return type name
    edges: 'MovieSkillEdge'
    nodes: 'MovieSkill'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryMovieToolConnection_Connection: { // field return type name
    edges: 'MovieToolEdge'
    nodes: 'MovieTool'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryPartnerConnection_Connection: { // field return type name
    edges: 'PartnerEdge'
    nodes: 'Partner'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryRoomTypeConnection_Connection: { // field return type name
    edges: 'RoomTypeEdge'
    nodes: 'RoomType'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryRoomTypeFixPartConnection_Connection: { // field return type name
    edges: 'RoomTypeFixPartEdge'
    nodes: 'RoomTypeFixPart'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QuerySkillConnection_Connection: { // field return type name
    edges: 'SkillEdge'
    nodes: 'Skill'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryToolConnection_Connection: { // field return type name
    edges: 'ToolEdge'
    nodes: 'Tool'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryUserConnection_Connection: { // field return type name
    edges: 'UserEdge'
    nodes: 'User'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryUserSkillConnection_Connection: { // field return type name
    edges: 'UserSkillEdge'
    nodes: 'UserSkill'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  RoomType: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    name: 'String'
    roomTypeFixParts: 'RoomTypeFixPart'
    updatedAt: 'DateTime'
  }
  RoomTypeEdge: { // field return type name
    cursor: 'String'
    node: 'RoomType'
  }
  RoomTypeFixPart: { // field return type name
    createdAt: 'DateTime'
    fixPartId: 'Int'
    id: 'ID'
    roomTypeId: 'Int'
    updatedAt: 'DateTime'
  }
  RoomTypeFixPartEdge: { // field return type name
    cursor: 'String'
    node: 'RoomTypeFixPart'
  }
  Skill: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    movieSkills: 'MovieSkill'
    name: 'String'
    updatedAt: 'DateTime'
    userSkills: 'UserSkill'
  }
  SkillEdge: { // field return type name
    cursor: 'String'
    node: 'Skill'
  }
  Tool: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    movieTools: 'MovieTool'
    name: 'String'
    updatedAt: 'DateTime'
  }
  ToolEdge: { // field return type name
    cursor: 'String'
    node: 'Tool'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    iconUrl: 'String'
    id: 'ID'
    role: 'Role'
    uid: 'String'
    updatedAt: 'DateTime'
    userSkills: 'UserSkill'
    username: 'String'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  UserSkill: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    skillId: 'Int'
    updatedAt: 'DateTime'
    userId: 'Int'
  }
  UserSkillEdge: { // field return type name
    cursor: 'String'
    node: 'UserSkill'
  }
  Node: { // field return type name
    id: 'ID'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createFixPart: { // args
      estimateFixTime?: string | null; // String
      houseId?: number | null; // Int
    }
    createHouse: { // args
      address?: string | null; // String
      name?: string | null; // String
      userId?: number | null; // Int
    }
    createMovie: { // args
      estimatedTime?: string | null; // String
      fixPartId?: number | null; // Int
      learningTime?: string | null; // String
    }
    createMovieSkill: { // args
      movieId?: number | null; // Int
      skillId?: number | null; // Int
    }
    createMovieTool: { // args
      movieId?: number | null; // Int
      toolId?: number | null; // Int
    }
    createPartner: { // args
      companyAddress?: string | null; // String
      companyName?: string | null; // String
      companyTel?: string | null; // String
      contactPerson?: string | null; // String
      houseId?: number | null; // Int
    }
    createRoomType: { // args
      name?: string | null; // String
    }
    createRoomTypeFixPart: { // args
      fixPartId?: number | null; // Int
      roomTypeId?: number | null; // Int
    }
    createSkill: { // args
      name?: string | null; // String
    }
    createTool: { // args
      name?: string | null; // String
    }
    createUser: { // args
      email?: string | null; // String
      iconUrl?: string | null; // String
      role?: string | null; // String
      uid?: string | null; // String
      username?: string | null; // String
    }
    createUserSkill: { // args
      skillId?: number | null; // Int
      userId?: number | null; // Int
    }
    deleteFixPart: { // args
      id?: string | null; // String
    }
    deleteHouse: { // args
      id?: string | null; // String
    }
    deleteMovie: { // args
      id?: string | null; // String
    }
    deleteMovieSkill: { // args
      id?: string | null; // String
    }
    deleteMovieTool: { // args
      id?: string | null; // String
    }
    deletePartner: { // args
      id?: string | null; // String
    }
    deleteRoomType: { // args
      id?: string | null; // String
    }
    deleteRoomTypeFixPart: { // args
      id?: string | null; // String
    }
    deleteSkill: { // args
      id?: string | null; // String
    }
    deleteTool: { // args
      id?: string | null; // String
    }
    deleteUser: { // args
      id?: string | null; // String
    }
    deleteUserSkill: { // args
      id?: string | null; // String
    }
    updateFixPart: { // args
      id?: string | null; // String
    }
    updateHouse: { // args
      id?: string | null; // String
    }
    updateMovie: { // args
      id?: string | null; // String
    }
    updateMovieSkill: { // args
      id?: string | null; // String
    }
    updateMovieTool: { // args
      id?: string | null; // String
    }
    updatePartner: { // args
      id?: string | null; // String
    }
    updateRoomType: { // args
      id?: string | null; // String
    }
    updateRoomTypeFixPart: { // args
      id?: string | null; // String
    }
    updateSkill: { // args
      id?: string | null; // String
    }
    updateTool: { // args
      id?: string | null; // String
    }
    updateUser: { // args
      id?: string | null; // String
    }
    updateUserSkill: { // args
      id?: string | null; // String
    }
  }
  Query: {
    fixPartConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    getFixPart: { // args
      id: string; // String!
    }
    getHouse: { // args
      id: string; // String!
    }
    getMovie: { // args
      id: string; // String!
    }
    getMovieSkill: { // args
      id: string; // String!
    }
    getMovieTool: { // args
      id: string; // String!
    }
    getPartner: { // args
      id: string; // String!
    }
    getRoomType: { // args
      id: string; // String!
    }
    getRoomTypeFixPart: { // args
      id: string; // String!
    }
    getSkill: { // args
      id: string; // String!
    }
    getTool: { // args
      id: string; // String!
    }
    getUser: { // args
      id: string; // String!
    }
    getUserSkill: { // args
      id: string; // String!
    }
    houseConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    movieConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    movieSkillConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    movieToolConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    node: { // args
      id: string; // ID!
    }
    nodes: { // args
      ids: string[]; // [ID!]!
    }
    partnerConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    postTweet: { // args
      id?: string | null; // String
      text?: string | null; // String
    }
    roomTypeConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    roomTypeFixPartConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    skillConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    toolConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    userConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    userSkillConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Node";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
    
    /**
     * The complexity for an individual field. Return a number
     * or a function that returns a number to specify the
     * complexity for this field.
     */
    complexity?: QueryComplexity<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}